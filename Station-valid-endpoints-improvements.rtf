{\rtf1\ansi\ansicpg1252\deff0\deflang1033\deflangfe1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fmodern\fprq1\fcharset0 Consolas;}}
{\colortbl ;\red0\green0\blue255;\red255\green0\blue0;\red100\green100\blue100;\red0\green0\blue0;\red127\green0\blue85;\red0\green0\blue192;\red42\green0\blue255;\red106\green62\blue62;\red63\green127\blue95;\red0\green102\blue204;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\nowidctlpar\sa200\sl276\slmult1\lang9\f0\fs22\par
\b Valid API end points\par
\pard\b0 GET  {\field{\*\fldinst{HYPERLINK "http://localhost:8090/stations/hd"}}{\fldrslt{\ul\cf1 http://localhost:8090/stations/hd}}}\f0\fs22\par
GET  {\field{\*\fldinst{HYPERLINK "http://localhost:8090/station/\{id"}}{\fldrslt{\ul\cf1 http://localhost:8090/station/\{id}}}\f0\fs22\}\par
GET  {\field{\*\fldinst{HYPERLINK "http://localhost:8090/station/find?name="<StationName"}}{\fldrslt{\ul\cf1 http://localhost:8090/station/find?name="<StationName}}}\f0\fs22 >"\par
DEL  {\field{\*\fldinst{HYPERLINK "http://localhost:8090/station/\{id"}}{\fldrslt{\ul\cf1 http://localhost:8090/station/\{id}}}\f0\fs22\}\par
PUT  {\field{\*\fldinst{HYPERLINK "http://localhost:8090/station/\{id"}}{\fldrslt{\ul\cf1 http://localhost:8090/station/\{id}}}\f0\fs22\}\par
\{ \par
    "stationName" : "", \par
    "callSign" : "",\par
    "hdEnabled" : ""\par
\}\par
\cf2\b For the below API, the http return code must be 201, insted of 200 ( When resources are created)\par
Also the stationName field in the DB must have made unique\cf0\b0\par
POST   {\field{\*\fldinst{HYPERLINK "http://localhost:8090/station"}}{\fldrslt{\ul\cf1 http://localhost:8090/station}}}\f0\fs22\par
\{ \par
    "stationName" : "", \par
    "callSign" : "",\par
    "hdEnabled" : ""\par
\}\par
\par
\par
\par
\par
\par
I tried connecting to H2 in memory database, for some reason I kept getting the error ( Error is posted below the code) \par
\par
\cf3\lang1033\f1\fs20 @Test\cf0\par
\cf4\tab\cf5\b public\cf4\b0  \cf5\b void\cf4\b0  testDB() \cf5\b throws\cf4\b0  ClassNotFoundException, SQLException\cf0\par
\cf4\tab\{\cf0\par
\cf4\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf7 "hello"\cf4 );\cf0\par
\cf4\tab\tab  String \cf8 JDBC_DRIVER\cf4  = \cf7 "org.h2.Driver"\cf4 ;   \cf0\par
\cf4\tab\tab  String \cf8 DB_URL\cf4  = \cf7 "jdbc:h2:mem:station-app"\cf4 ;\cf0\par
\cf4\tab\tab  \cf9 // Database credentials \cf0\par
\cf4\tab\tab  String \cf8 USER\cf4  = \cf7 "sa"\cf4 ; \cf0\par
\cf4\tab\tab  String \cf8 PASS\cf4  = \cf7 ""\cf4 ;\tab\cf0\par
\cf4\tab\tab  \cf0\par
\cf4\tab\tab  Class.\i forName\i0 (\cf8 JDBC_DRIVER\cf4 );\cf0\par
\cf4\tab\tab  Connection \cf8 con\cf4  = DriverManager.\i getConnection\i0 (\cf8 DB_URL\cf4 , \cf8 USER\cf4 , \cf8 PASS\cf4 );\cf0\par
\cf4\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf7 " Schema : "\cf4  + \cf8 con\cf4 .getSchema());\cf0\par
\par
\cf4\tab\tab  String \cf8 sqlQuerry\cf4  = \cf7 "SELECT * FROM STATION"\cf4 ;\cf0\par
\cf4\tab\tab  \cf9 //String sqlQuerry = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES";\cf0\par
\cf4\tab\tab  Statement \cf8 stmt\cf4  = \cf8 con\cf4 .createStatement();\cf0\par
\cf4\tab\tab  ResultSet \cf8 rs\cf4  = \cf8 stmt\cf4 .executeQuery(\cf8 sqlQuerry\cf4 );\cf0\par
\cf4\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf7 " RS : "\cf4  + \cf8 rs\cf4 );\cf0\par
\cf4\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf7 " Row : "\cf4  + \cf8 rs\cf4 .getRow());\cf0\par
\cf4\tab\tab  \tab\tab  \cf0\par
\cf4\tab\tab  \tab  \cf0\par
\cf4\tab\tab  \cf5\b while\cf4\b0 (\cf8 rs\cf4 .next())\cf0\par
\cf4\tab\tab  \{\cf0\par
\cf4\tab\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf8 rs\cf4 .getString(\cf7 "stationID"\cf4 ));\cf0\par
\cf4\tab\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf8 rs\cf4 .getString(\cf7 "stationName"\cf4 ));\cf0\par
\cf4\tab\tab\tab  System.\cf6\b\i out\cf4\b0\i0 .println(\cf8 rs\cf4 .getString(\cf7 "callSign"\cf4 ));\cf0\par
\cf4\tab  \cf0\par
\cf4\tab\tab  \}\cf0\par
\cf4\tab\tab  \cf0\par
\cf4\tab\tab  \cf8 con\cf4 .close();\cf0\par
\cf4\tab\tab\cf0\par
\pard\nowidctlpar\sa200\sl276\slmult1\cf4\tab\}\par
\cf0\lang9\f0\fs22\par
Exception : \par
\par
\pard\cf10\lang1033\ul\f1\fs20 org.h2.jdbc.JdbcSQLException\cf4\ulnone : Table "STATION" not found; SQL statement:\cf0\par
\cf4 SELECT * FROM STATION [42102-192]\cf0\par
\cf4\tab at org.h2.message.DbException.getJdbcSQLException(\cf10\ul DbException.java:345\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.message.DbException.get(\cf10\ul DbException.java:179\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.message.DbException.get(\cf10\ul DbException.java:155\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.readTableOrView(\cf10\ul Parser.java:5388\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.readTableFilter(\cf10\ul Parser.java:1257\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parseSelectSimpleFromPart(\cf10\ul Parser.java:1896\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parseSelectSimple(\cf10\ul Parser.java:2044\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parseSelectSub(\cf10\ul Parser.java:1890\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parseSelectUnion(\cf10\ul Parser.java:1709\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parseSelect(\cf10\ul Parser.java:1697\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parsePrepared(\cf10\ul Parser.java:445\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parse(\cf10\ul Parser.java:317\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.parse(\cf10\ul Parser.java:289\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.command.Parser.prepareCommand(\cf10\ul Parser.java:254\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.engine.Session.prepareLocal(\cf10\ul Session.java:560\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.engine.Session.prepareCommand(\cf10\ul Session.java:501\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.jdbc.JdbcConnection.prepareCommand(\cf10\ul JdbcConnection.java:1201\cf4\ulnone )\cf0\par
\cf4\tab at org.h2.jdbc.JdbcStatement.executeQuery(\cf10\ul JdbcStatement.java:73\cf4\ulnone )\cf0\par
\cf4\tab at Station.H2Connector.testDB(\cf10\ul H2Connector.java:98\cf4\ulnone )\cf0\par
\cf4\tab at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(\cf10\ul Native Method\cf4\ulnone )\cf0\par
\cf4\tab at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(\cf10\ul NativeMethodAccessorImpl.java:62\cf4\ulnone )\cf0\par
\cf4\tab at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(\cf10\ul DelegatingMethodAccessorImpl.java:43\cf4\ulnone )\cf0\par
\cf4\tab at java.base/java.lang.reflect.Method.invoke(\cf10\ul Method.java:564\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.MethodInvocationHelper.invokeMethod(\cf10\ul MethodInvocationHelper.java:124\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.Invoker.invokeMethod(\cf10\ul Invoker.java:583\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.Invoker.invokeTestMethod(\cf10\ul Invoker.java:719\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.Invoker.invokeTestMethods(\cf10\ul Invoker.java:989\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.TestMethodWorker.invokeTestMethods(\cf10\ul TestMethodWorker.java:125\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.internal.TestMethodWorker.run(\cf10\ul TestMethodWorker.java:109\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestRunner.privateRun(\cf10\ul TestRunner.java:648\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestRunner.run(\cf10\ul TestRunner.java:505\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunner.runTest(\cf10\ul SuiteRunner.java:455\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunner.runSequentially(\cf10\ul SuiteRunner.java:450\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunner.privateRun(\cf10\ul SuiteRunner.java:415\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunner.run(\cf10\ul SuiteRunner.java:364\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunnerWorker.runSuite(\cf10\ul SuiteRunnerWorker.java:52\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.SuiteRunnerWorker.run(\cf10\ul SuiteRunnerWorker.java:84\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestNG.runSuitesSequentially(\cf10\ul TestNG.java:1208\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestNG.runSuitesLocally(\cf10\ul TestNG.java:1137\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestNG.runSuites(\cf10\ul TestNG.java:1049\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.TestNG.run(\cf10\ul TestNG.java:1017\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.remote.AbstractRemoteTestNG.run(\cf10\ul AbstractRemoteTestNG.java:114\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.remote.RemoteTestNG.initAndRun(\cf10\ul RemoteTestNG.java:251\cf4\ulnone )\cf0\par
\cf4\tab at org.testng.remote.RemoteTestNG.main(\cf10\ul RemoteTestNG.java:77\cf4\ulnone )\cf0\par
\pard\nowidctlpar\sa200\sl276\slmult1\lang9\f0\fs22\par
\par
Before running integration tests, please make sure to update the DB constants to H2 in memory database;\par
\b  \b0\par
\par
\par
\par
}
 